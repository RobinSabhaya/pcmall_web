# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[POST-COMMIT]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_info() {
    echo -e "${PURPLE}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Get commit information
COMMIT_HASH=$(git rev-parse HEAD)
COMMIT_HASH_SHORT=$(git rev-parse --short HEAD)
COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')
COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
COMMIT_DATE=$(git log -1 --pretty=format:'%ad' --date=format:'%Y-%m-%d %H:%M:%S')
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

print_success "Commit successful! ðŸŽ‰"
print_info "Hash: $COMMIT_HASH_SHORT"
print_info "Branch: $BRANCH_NAME"
print_info "Author: $COMMIT_AUTHOR"
print_info "Date: $COMMIT_DATE"
print_info "Message: $COMMIT_MESSAGE"

# Get file statistics
FILES_CHANGED=$(git diff --name-only HEAD~1..HEAD | wc -l)
LINES_ADDED=$(git diff --stat HEAD~1..HEAD | tail -1 | sed -n 's/.* \([0-9]*\) insertion.*/\1/p')
LINES_DELETED=$(git diff --stat HEAD~1..HEAD | tail -1 | sed -n 's/.* \([0-9]*\) deletion.*/\1/p')

# Handle cases where sed might return empty
[ -z "$LINES_ADDED" ] && LINES_ADDED=0
[ -z "$LINES_DELETED" ] && LINES_DELETED=0

print_info "Files changed: $FILES_CHANGED"
print_info "Lines added: $LINES_ADDED"
print_info "Lines deleted: $LINES_DELETED"

# Calculate commit size category
TOTAL_CHANGES=$((LINES_ADDED + LINES_DELETED))
if [ $TOTAL_CHANGES -lt 50 ]; then
    SIZE_CATEGORY="Small"
elif [ $TOTAL_CHANGES -lt 200 ]; then
    SIZE_CATEGORY="Medium"
elif [ $TOTAL_CHANGES -lt 500 ]; then
    SIZE_CATEGORY="Large"
else
    SIZE_CATEGORY="Very Large"